(* Model Identifiers
     Component (Number):  ()
         Class (Number): Diverter Pan ()
         Qualified Name: 
   
Description: 

*)

SBR( obj_diverter_pan__ );

obj_diverter_pan__.ism.b_done := b_FALSE;

while (Not obj_diverter_pan__.ism.b_done) do
	obj_diverter_pan__.ism.b_done := b_TRUE;
	case (obj_diverter_pan__.d_current_state) of
	0:  (* Uninstantiated Instance *)
	
		(* Exit Conditions *)
		if (obj_diverter_pan__.events.b_creation_event) then
			(* Consume the Event *)
			obj_diverter_pan__.events.b_creation_event := b_FALSE;

			obj_diverter_pan__.d_current_state := 1;
			obj_diverter_pan__.ism.b_txn := b_TRUE;
			obj_diverter_pan__.ism.b_done := b_FALSE;
		end_if;

	3:  (* State: 'PanDown' *)
		(* Entry Action *)
		if (obj_diverter_pan__.ism.b_txn) then
			obj_diverter_pan__.ism.b_txn := b_FALSE
			
			(*  Action:
				
				
			*)

			(* TODO: Implement state action code here *)
			
		end_if;
		
		(* Exit Conditions *)
		if (obj_diverter_pan__.events.b_activate) then
			(* Exit Action *)

			(* Consume the Event *)
			obj_diverter_pan__.events.b_activate := b_FALSE;

			obj_diverter_pan__.d_current_state := 2;
			obj_diverter_pan__.ism.b_txn := b_TRUE;
			obj_diverter_pan__.ism.b_done := b_FALSE;
			
		elsif (obj_diverter_pan__.events.b_de_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		elsif (obj_diverter_pan__.events.b_LowerPan) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		end_if;

	2:  (* State: 'PanUp' *)
		(* Entry Action *)
		if (obj_diverter_pan__.ism.b_txn) then
			obj_diverter_pan__.ism.b_txn := b_FALSE
			
			(*  Action:
				
				
			*)

			(* TODO: Implement state action code here *)
			
		end_if;
		
		(* Exit Conditions *)
		if (obj_diverter_pan__.events.b_de_activate) then
			(* Exit Action *)

			(* Consume the Event *)
			obj_diverter_pan__.events.b_de_activate := b_FALSE;

			obj_diverter_pan__.d_current_state := 3;
			obj_diverter_pan__.ism.b_txn := b_TRUE;
			obj_diverter_pan__.ism.b_done := b_FALSE;
			
		elsif (obj_diverter_pan__.events.b_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		elsif (obj_diverter_pan__.events.b_LowerPan) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		end_if;

	1:  (* State: 'Initial' *)
		(* Entry Action *)
		if (obj_diverter_pan__.ism.b_txn) then
			obj_diverter_pan__.ism.b_txn := b_FALSE
			
			(*  Action:
				
				
			*)

			(* TODO: Implement state action code here *)
			
		end_if;
		
		(* Exit Conditions *)
		if (obj_diverter_pan__.events.b_LowerPan) then
			(* Exit Action *)

			(* Consume the Event *)
			obj_diverter_pan__.events.b_LowerPan := b_FALSE;

			obj_diverter_pan__.d_current_state := 3;
			obj_diverter_pan__.ism.b_txn := b_TRUE;
			obj_diverter_pan__.ism.b_done := b_FALSE;
			
		elsif (obj_diverter_pan__.events.b_de_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		elsif (obj_diverter_pan__.events.b_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		end_if;

	else (* Invalid State - End of 'case' *)
		(* The state machine was directed to an invalid state.  Either a programming
		   error was made or a hardware failure has occurred in the PLC. *)
		
		(* TODO: Add a Diagnostic here. *)
		
		obj_diverter_pan__.d_current_state := 0;
		obj_diverter_pan__.ism.b_txn := b_FALSE;
		obj_diverter_pan__.ism.b_done := b_FALSE;
	end_case;
end_while;
