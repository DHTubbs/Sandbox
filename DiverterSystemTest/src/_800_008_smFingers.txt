(* Model Identifiers
     Component (Number): 'Diverter' (800)
         Class (Number): 'Fingers' (008)
         Qualified Name: 'Diverter::Design::Model::Diverter::Subsys::Fingers'
   
Description: 

Signature: JSR( _800_008_smFingers );
*)

SBR(  );

_obj.fingers_800_008.ism.b_done := b_FALSE;

while (Not _obj.fingers_800_008.ism.b_done) do
	_obj.fingers_800_008.ism.b_done := b_TRUE;
	case (_obj.fingers_800_008.d_current_state) of
	0:  (* Uninstantiated Instance *)
	
		(* Exit Conditions *)
		if (_obj.fingers_800_008.events.evt_lst.b_creation_event) then
			(* Consume the Event *)
			_obj.fingers_800_008.events.evt_lst.b_creation_event := b_FALSE;

			_obj.fingers_800_008.d_current_state := 1;
			_obj.fingers_800_008.ism.b_txn := b_FALSE;
			_obj.fingers_800_008.ism.b_done := b_FALSE;
		end_if;

	1:  (* State: 'Raised' *)
		(* Entry Action *)
		if (_obj.fingers_800_008.ism.b_txn) then
			_obj.fingers_800_008.ism.b_txn := b_FALSE;
			
			(*  Action:
				
				
			*)

			(* TODO: Implement state action code here *)
			
		end_if;
		
		(* Exit Conditions *)
		if (_obj.fingers_800_008.events.evt_lst.b_activate) then
			(* Exit Action *)

			(* Consume the Event *)
			_obj.fingers_800_008.events.evt_lst.b_activate := b_FALSE;

			_obj.fingers_800_008.d_current_state := 2;
			_obj.fingers_800_008.ism.b_txn := b_TRUE;
			_obj.fingers_800_008.ism.b_done := b_FALSE;
			
		elsif (_obj.fingers_800_008.events.evt_lst.b_de_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		end_if;

	2:  (* State: 'Lowered' *)
		(* Entry Action *)
		if (_obj.fingers_800_008.ism.b_txn) then
			_obj.fingers_800_008.ism.b_txn := b_FALSE;
			
			(*  Action:
				
				
			*)

			(* TODO: Implement state action code here *)
			
		end_if;
		
		(* Exit Conditions *)
		if (_obj.fingers_800_008.events.evt_lst.b_de_activate) then
			(* Exit Action *)

			(* Consume the Event *)
			_obj.fingers_800_008.events.evt_lst.b_de_activate := b_FALSE;

			_obj.fingers_800_008.d_current_state := 1;
			_obj.fingers_800_008.ism.b_txn := b_TRUE;
			_obj.fingers_800_008.ism.b_done := b_FALSE;
			
		elsif (_obj.fingers_800_008.events.evt_lst.b_activate) then
			(* Can't Happen - The model indicates this event cannot occur in this state.
			
			   Description: 
			*)
			
			(* TODO: Add a diagnostic here. *)
			
		end_if;

	else (* Invalid State - End of 'case' *)
		(* The state machine was directed to an invalid state.  Either a programming
		   error was made or a hardware failure has occurred in the PLC. *)
		
		(* TODO: Add a Diagnostic here. *)
		
		_obj.fingers_800_008.d_current_state := 0;
		_obj.fingers_800_008.ism.b_txn := b_FALSE;
		_obj.fingers_800_008.ism.b_done := b_FALSE;
	end_case;
end_while;
